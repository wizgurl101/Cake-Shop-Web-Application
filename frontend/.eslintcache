[{"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\index.js":"1","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\store.js":"2","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\App.js":"3","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\orderReducers.js":"6","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\productReducers.js":"7","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\userReducers.js":"8","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\HomeScreen.js":"9","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Header.js":"11","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\RegisterScreen.js":"12","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\LoginScreen.js":"13","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\checkoutScreen\\ShippingScreen.js":"14","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\checkoutScreen\\DeliveryScreen.js":"15","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\checkoutScreen\\PaymentScreen.js":"17","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\checkoutScreen\\SummaryScreen.js":"18","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\orderScreen\\OrderListScreen.js":"19","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\orderScreen\\OrderDetailScreen.js":"20","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserListScreen.js":"21","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductListScreen.js":"22","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserEditScreen.js":"23","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserProfileScreen.js":"24","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductDetailScreen.js":"25","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductEditScreen.js":"26","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\cartConstants.js":"27","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Loader.js":"28","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Message.js":"29","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\FormContainer.js":"30","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\userConstants.js":"31","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\productConstants.js":"32","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\orderConstants.js":"33","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\priceConstants.js":"34","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\actions\\userActions.js":"35","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\actions\\productActions.js":"36","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\helpers\\PriceSizeHelpers.js":"37","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Product.js":"38","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\MetaData.js":"39","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\ProductCarousel.js":"40","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\SearchBox.js":"41","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\CheckoutProgress.js":"42","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Rating.js":"43","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\actions\\cartActions.js":"44","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\actions\\orderActions.js":"45"},{"size":633,"mtime":1648935305151,"results":"46","hashOfConfig":"47"},{"size":2614,"mtime":1648911540891,"results":"48","hashOfConfig":"47"},{"size":2598,"mtime":1648935305140,"results":"49","hashOfConfig":"47"},{"size":375,"mtime":1648911540886,"results":"50","hashOfConfig":"47"},{"size":1614,"mtime":1648911540884,"results":"51","hashOfConfig":"47"},{"size":3146,"mtime":1648911540885,"results":"52","hashOfConfig":"47"},{"size":3780,"mtime":1648911540885,"results":"53","hashOfConfig":"47"},{"size":3597,"mtime":1648911540885,"results":"54","hashOfConfig":"47"},{"size":1579,"mtime":1648911540886,"results":"55","hashOfConfig":"47"},{"size":341,"mtime":1648911540879,"results":"56","hashOfConfig":"47"},{"size":2849,"mtime":1648911540879,"results":"57","hashOfConfig":"47"},{"size":4041,"mtime":1648911540887,"results":"58","hashOfConfig":"47"},{"size":2637,"mtime":1648911540887,"results":"59","hashOfConfig":"47"},{"size":2765,"mtime":1648911540888,"results":"60","hashOfConfig":"47"},{"size":1443,"mtime":1648911540887,"results":"61","hashOfConfig":"47"},{"size":5263,"mtime":1648911540886,"results":"62","hashOfConfig":"47"},{"size":1666,"mtime":1648911540888,"results":"63","hashOfConfig":"47"},{"size":5602,"mtime":1648911540888,"results":"64","hashOfConfig":"47"},{"size":2768,"mtime":1648911540889,"results":"65","hashOfConfig":"47"},{"size":8369,"mtime":1648911540889,"results":"66","hashOfConfig":"47"},{"size":2901,"mtime":1648911540891,"results":"67","hashOfConfig":"47"},{"size":4237,"mtime":1648911540890,"results":"68","hashOfConfig":"47"},{"size":3329,"mtime":1648911540891,"results":"69","hashOfConfig":"47"},{"size":6213,"mtime":1648911540891,"results":"70","hashOfConfig":"47"},{"size":9657,"mtime":1648911540889,"results":"71","hashOfConfig":"47"},{"size":5381,"mtime":1648911540890,"results":"72","hashOfConfig":"47"},{"size":309,"mtime":1648911540882,"results":"73","hashOfConfig":"47"},{"size":405,"mtime":1648911540880,"results":"74","hashOfConfig":"47"},{"size":176,"mtime":1648911540880,"results":"75","hashOfConfig":"47"},{"size":324,"mtime":1648911540879,"results":"76","hashOfConfig":"47"},{"size":1534,"mtime":1648911540883,"results":"77","hashOfConfig":"47"},{"size":1613,"mtime":1648911540882,"results":"78","hashOfConfig":"47"},{"size":1385,"mtime":1648911540882,"results":"79","hashOfConfig":"47"},{"size":263,"mtime":1648919227249,"results":"80","hashOfConfig":"47"},{"size":6471,"mtime":1648911540877,"results":"81","hashOfConfig":"47"},{"size":6113,"mtime":1648911540876,"results":"82","hashOfConfig":"47"},{"size":1285,"mtime":1648919457918,"results":"83","hashOfConfig":"47"},{"size":632,"mtime":1648911540880,"results":"84","hashOfConfig":"47"},{"size":612,"mtime":1648911540880,"results":"85","hashOfConfig":"47"},{"size":1233,"mtime":1648911540881,"results":"86","hashOfConfig":"47"},{"size":823,"mtime":1648911540881,"results":"87","hashOfConfig":"47"},{"size":1537,"mtime":1648911540878,"results":"88","hashOfConfig":"47"},{"size":1913,"mtime":1648911540881,"results":"89","hashOfConfig":"47"},{"size":2109,"mtime":1648911540876,"results":"90","hashOfConfig":"47"},{"size":5022,"mtime":1648911540876,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4qqrqs",{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\index.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\store.js",[],["186","187"],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\App.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Header.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\checkoutScreen\\ShippingScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\checkoutScreen\\DeliveryScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\checkoutScreen\\PaymentScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\checkoutScreen\\SummaryScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\orderScreen\\OrderListScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\orderScreen\\OrderDetailScreen.js",["188"],"import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport axios from \"axios\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { addZeroAtEnd } from \"../../helpers/PriceSizeHelpers\";\r\nimport {\r\n  changeOrderDeliveryStatus,\r\n  getOrderDetails,\r\n  processOrderPayment,\r\n} from \"../../actions/orderActions\";\r\nimport {\r\n  ORDER_DELIVERY_RESET,\r\n  ORDER_PAYMENT_RESET,\r\n} from \"../../constants/orderConstants\";\r\n\r\nconst OrderDetailScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const orderId = match.params.id;\r\n\r\n  // state variables\r\n  // for PayPal integration\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPayment = useSelector((state) => state.orderPayment);\r\n  const { loading: loadingPayment, success: successPayment } = orderPayment;\r\n\r\n  const orderDelivery = useSelector((state) => state.orderDelivery);\r\n  const { loading: loadingDelivery, success: successDelivery } = orderDelivery;\r\n\r\n  // If page is not loading\r\n  if (!loading) {\r\n    // calculate order price before tax\r\n    order.itemsPrice = addZeroAtEnd(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      // fetch client id from backend to access PayPal business account\r\n      const { data: clientId } = await axios.get(\"/cakeshop/config/paypal\");\r\n\r\n      // build sdk script and append it to the page\r\n      const sdkScript = document.createElement(\"script\");\r\n      sdkScript.type = \"text/javascript\";\r\n      sdkScript.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      sdkScript.async = true;\r\n\r\n      sdkScript.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n\r\n      document.body.appendChild(sdkScript);\r\n    };\r\n\r\n    if (!order || order._id !== orderId || successPayment || successDelivery) {\r\n      dispatch({ type: ORDER_PAYMENT_RESET });\r\n      dispatch({ type: ORDER_DELIVERY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [history, userInfo, order, orderId, successPayment, successDelivery]);\r\n\r\n  // FUNCTIONS\r\n  const setDeliveryStatusHandler = () => {\r\n    dispatch(changeOrderDeliveryStatus(order));\r\n  };\r\n\r\n  const setPaymentStatusHandler = (paymentResult) => {\r\n    dispatch(processOrderPayment(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order #{order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                {/* able to use order.user.name because of the populate method */}\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveryDate.substring(0, 10)}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">\r\n                  <strong>Not Delivered </strong>- Delivery Date:{\" \"}\r\n                  {order.deliveryDate.substring(0, 10)}\r\n                </Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">\r\n                  Paid on {order.paidAt.substring(0, 10)}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((orderItem, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={orderItem.image}\r\n                            alt={orderItem.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${orderItem.product}`}>\r\n                            {orderItem.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>Size: {orderItem.size}</Col>\r\n                        <Col md={4}>\r\n                          {orderItem.qty} x ${orderItem.price} = $\r\n                          {orderItem.qty * orderItem.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPayment && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={setPaymentStatusHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDelivery && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={setDeliveryStatusHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetailScreen;\r\n","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserListScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductListScreen.js",["189"],"import { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message.js\";\r\nimport Loader from \"../../components/Loader.js\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../../actions/productActions.js\";\r\nimport { PRODUCT_CREATE_RESET } from \"../../constants/productConstants.js\";\r\n\r\nconst ProductListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // get all products\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  // delete a product\r\n  const productDeleted = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDeleted;\r\n\r\n  // create a product\r\n  const productCreated = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreated;\r\n\r\n  // get current log in user info\r\n  const currentUserLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = currentUserLogin;\r\n\r\n  useEffect(() => {\r\n    // reset product object in state after creating a new product\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    // if creating a new product was successful, redirect user to product edit screen\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n\r\n    dispatch(listProducts());\r\n  }, [dispatch, userInfo, history, successDelete, successCreate]);\r\n\r\n  // FUNCTIONS\r\n  const deleteProductHander = (productId, productName) => {\r\n    if (window.confirm(`Confirm deleting ${productName}?`)) {\r\n      dispatch(deleteProduct(productId));\r\n    }\r\n  };\r\n\r\n  const createNewProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createNewProductHandler}>\r\n            <i className=\"fas fa-plus\" /> Add new product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <message variant=\"danger\">{errorCreate}</message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>PRODUCT ID</th>\r\n                <th>NAME</th>\r\n                <th>CATEGORY</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\" />\r\n                      </Button>\r\n                    </LinkContainer>{\" \"}\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() =>\r\n                        deleteProductHander(product._id, product.name)\r\n                      }\r\n                    >\r\n                      <i className=\"fas fa-trash\" />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserEditScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserProfileScreen.js",["190"],"import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../../actions/userActions\";\r\nimport { listUserOrders } from \"../../actions/orderActions\";\r\n\r\nconst UserProfileScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // state variables for user personal info form\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdatedProfile = useSelector((state) => state.userUpdatedProfile);\r\n  const { success: successUpdatedProfile } = userUpdatedProfile;\r\n\r\n  const orderListUser = useSelector((state) => state.orderListUser);\r\n  const {\r\n    loading: loadingUserOrdersList,\r\n    error: errorUserOrdersList,\r\n    orders,\r\n  } = orderListUser;\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!userInfo) {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        history.push(\"/login\");\r\n      } else {\r\n        // get user details\r\n        if (!user.name) {\r\n          // get user details and list orders\r\n          dispatch(getUserDetails(\"profile\"));\r\n          dispatch(listUserOrders());\r\n        } else {\r\n          setName(user.name);\r\n          setEmail(user.email);\r\n        }\r\n      }\r\n    },\r\n    // eslint-disable-next-line no-restricted-globals\r\n    [dispatch, history, userInfo, user]\r\n  );\r\n\r\n  // FUNCTION\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name,\r\n          email,\r\n          password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>{user.name} Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {successUpdatedProfile && (\r\n          <Message variant=\"success\">Profile Updated</Message>\r\n        )}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>Order History</h2>\r\n        {loadingUserOrdersList ? (\r\n          <Loader />\r\n        ) : errorUserOrdersList ? (\r\n          <Message variant=\"danger\">{errorUserOrdersList}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"green\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"green\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default UserProfileScreen;\r\n","C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductDetailScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductEditScreen.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Message.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\constants\\priceConstants.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\helpers\\PriceSizeHelpers.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Product.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\MetaData.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\CheckoutProgress.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\nbpha\\Documents\\current personal projects\\Cake-Shop-Web-Application\\frontend\\src\\actions\\orderActions.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":81,"column":6,"nodeType":"197","endLine":81,"endColumn":74,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"199","line":58,"column":6,"nodeType":"197","endLine":58,"endColumn":65,"suggestions":"200"},{"ruleId":"195","severity":1,"message":"201","line":54,"column":5,"nodeType":"197","endLine":54,"endColumn":40,"suggestions":"202"},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["205"],"React Hook useEffect has a missing dependency: 'createdProduct._id'. Either include it or remove the dependency array.",["206"],"React Hook useEffect has an unnecessary dependency: 'history'. Either exclude it or remove the dependency array. Outer scope values like 'history' aren't valid dependencies because mutating them doesn't re-render the component.",["207"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [history, userInfo, order, orderId, successPayment, successDelivery, dispatch]",{"range":"214","text":"215"},"Update the dependencies array to be: [dispatch, userInfo, history, successDelete, successCreate, createdProduct._id]",{"range":"216","text":"217"},"Update the dependencies array to be: [dispatch, userInfo, user]",{"range":"218","text":"219"},[2713,2781],"[history, userInfo, order, orderId, successPayment, successDelivery, dispatch]",[1819,1878],"[dispatch, userInfo, history, successDelete, successCreate, createdProduct._id]",[1905,1940],"[dispatch, userInfo, user]"]