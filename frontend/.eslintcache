[{"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\index.js":"1","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\store.js":"2","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\App.js":"3","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Header.js":"7","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Footer.js":"8","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\RegisterScreen.js":"9","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserEditScreen.js":"10","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\HomeScreen.js":"11","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\LoginScreen.js":"12","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserListScreen.js":"13","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductListScreen.js":"14","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductDetailScreen.js":"15","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductEditScreen.js":"16","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\ProfileScreen.js":"17","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Message.js":"18","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\FormContainer.js":"19","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Loader.js":"20","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\constants\\productConstants.js":"21","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\actions\\userActions.js":"23","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\actions\\productActions.js":"24","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Product.js":"25","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Rating.js":"26","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\MetaData.js":"27","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\ProductCarousel.js":"28","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\cartReducers.js":"29","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\CartScreen.js":"30","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\actions\\cartActions.js":"31","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\constants\\cartConstants.js":"32","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\constants\\priceConstants.js":"33"},{"size":614,"mtime":1625367304028,"results":"34","hashOfConfig":"35"},{"size":2014,"mtime":1625910144377,"results":"36","hashOfConfig":"35"},{"size":1769,"mtime":1625830728544,"results":"37","hashOfConfig":"35"},{"size":375,"mtime":1625367304029,"results":"38","hashOfConfig":"35"},{"size":3780,"mtime":1625908890826,"results":"39","hashOfConfig":"35"},{"size":3315,"mtime":1625367304029,"results":"40","hashOfConfig":"35"},{"size":2034,"mtime":1625367304025,"results":"41","hashOfConfig":"35"},{"size":341,"mtime":1625367304024,"results":"42","hashOfConfig":"35"},{"size":4041,"mtime":1625367304030,"results":"43","hashOfConfig":"35"},{"size":3329,"mtime":1625367304032,"results":"44","hashOfConfig":"35"},{"size":1211,"mtime":1625522650651,"results":"45","hashOfConfig":"35"},{"size":2637,"mtime":1625367304030,"results":"46","hashOfConfig":"35"},{"size":2901,"mtime":1625367304033,"results":"47","hashOfConfig":"35"},{"size":4214,"mtime":1625367304031,"results":"48","hashOfConfig":"35"},{"size":9636,"mtime":1625909120193,"results":"49","hashOfConfig":"35"},{"size":5501,"mtime":1625367304031,"results":"50","hashOfConfig":"35"},{"size":167,"mtime":1625367304032,"results":"51","hashOfConfig":"35"},{"size":176,"mtime":1625367304026,"results":"52","hashOfConfig":"35"},{"size":324,"mtime":1625367304025,"results":"53","hashOfConfig":"35"},{"size":405,"mtime":1625367304025,"results":"54","hashOfConfig":"35"},{"size":1613,"mtime":1625522650651,"results":"55","hashOfConfig":"35"},{"size":1218,"mtime":1625367304027,"results":"56","hashOfConfig":"35"},{"size":5733,"mtime":1625367304023,"results":"57","hashOfConfig":"35"},{"size":6004,"mtime":1625522650651,"results":"58","hashOfConfig":"35"},{"size":632,"mtime":1625367304026,"results":"59","hashOfConfig":"35"},{"size":1913,"mtime":1625874958375,"results":"60","hashOfConfig":"35"},{"size":612,"mtime":1625367304026,"results":"61","hashOfConfig":"35"},{"size":1233,"mtime":1625874818412,"results":"62","hashOfConfig":"35"},{"size":1614,"mtime":1625830868735,"results":"63","hashOfConfig":"35"},{"size":4434,"mtime":1625884800696,"results":"64","hashOfConfig":"35"},{"size":2109,"mtime":1625909570206,"results":"65","hashOfConfig":"35"},{"size":309,"mtime":1625826559966,"results":"66","hashOfConfig":"35"},{"size":121,"mtime":1625883852131,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"q43j2u",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\index.js",[],["138","139"],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\store.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\App.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Header.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserEditScreen.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\UserListScreen.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductListScreen.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductDetailScreen.js",["140"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport MetaData from \"../../components/MetaData\";\r\nimport Rating from \"../../components/Rating\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../../constants/productConstants\";\r\nimport {\r\n  SIZE_SMALL_PRICE,\r\n  SIZE_MEDIUM_PRICE,\r\n  SIZE_LARGE_PRICE,\r\n} from \"../../constants/priceConstants.js\";\r\n\r\n/**\r\n * Product Detail Screen display the product detail of a single product, allow\r\n * user to add the product to the cart and to leave a rating and review\r\n * @param\r\n * @returns\r\n */\r\nconst ProductDetailScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  // state variables\r\n  const [qty, setQty] = useState(1);\r\n  const [price, setPrice] = useState(SIZE_SMALL_PRICE);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  // get product detail\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  // get log in user info to show form for giving a review\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // get new product review\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReview,\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    // review for product was successfully created\r\n    if (successProductReview) {\r\n      alert(\"Review Submitted!\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  // FUNCTIONS\r\n  const priceChangeHandler = (e) => {\r\n    switch (e.target.value) {\r\n      case \"sm\":\r\n        setPrice(SIZE_SMALL_PRICE);\r\n        break;\r\n      case \"med\":\r\n        setPrice(SIZE_MEDIUM_PRICE);\r\n        break;\r\n      case \"lg\":\r\n        setPrice(SIZE_LARGE_PRICE);\r\n        break;\r\n      default:\r\n        console.error(\"error within priceChangeHandler\");\r\n    }\r\n  };\r\n\r\n  const qtyChangeHandler = (e) => {\r\n    setQty(e.target.value);\r\n  };\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}&price=${price}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProductReview(match.params.id, { rating, comment }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <MetaData title={product.name} />\r\n          {/* Product Detail Section */}\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numberOfReviews} review`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            {/* Add to Cart Section */}\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      {/* TODO: Come back later dynamically change price based on size */}\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Size:</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          aria-label=\"Select a size\"\r\n                          onChange={priceChangeHandler}\r\n                        >\r\n                          <option key=\"sm\" value=\"sm\">\r\n                            Small - 12'\r\n                          </option>\r\n                          <option key=\"med\" value=\"med\">\r\n                            Medium - 14'\r\n                          </option>\r\n                          <option key=\"lg\" value=\"lg\">\r\n                            Large - 18'\r\n                          </option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty:</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          aria-label=\"Select quantity\"\r\n                          onChange={qtyChangeHandler}\r\n                        >\r\n                          <option key=\"1\" value=\"1\">\r\n                            1\r\n                          </option>\r\n                          <option key=\"2\" value=\"2\">\r\n                            2\r\n                          </option>\r\n                          <option key=\"3\" value=\"3\">\r\n                            3\r\n                          </option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      type=\"button\"\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/* Product Review Section */}\r\n          <Row>\r\n            <Col md={6}>\r\n              {/* TODO: Debug this, product.reviews is undefined */}\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {/* loop through product array of reviews */}\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createAt}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n              {/* New Review Form */}\r\n              <ListGroup.Item>\r\n                <h2>Write a Customer Review</h2>\r\n                {loadingProductReview && <Loader />}\r\n                {successProductReview && (\r\n                  <Message variant=\"success\">\r\n                    Review submitted successfully\r\n                  </Message>\r\n                )}\r\n                {errorProductReview && (\r\n                  <Message variant=\"danger\">{errorProductReview}</Message>\r\n                )}\r\n                {userInfo ? (\r\n                  <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"rating\">\r\n                      <Form.Label>Rating</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={rating}\r\n                        onChange={(e) => setRating(e.target.value)}\r\n                      >\r\n                        <option value=\"\">Select...</option>\r\n                        <option value=\"1\">1 - Poor</option>\r\n                        <option value=\"2\">2 - Fair</option>\r\n                        <option value=\"3\">3 - Good</option>\r\n                        <option value=\"4\">4 - Very Good</option>\r\n                        <option value=\"5\">5 - Excellent</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"comment\">\r\n                      <Form.Label>Comment</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        row=\"4\"\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                      />\r\n                      <Button type=\"submit\" variant=\"primary\">\r\n                        Submit\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                ) : (\r\n                  <Message>\r\n                    Please <Link to=\"/login\">sign in</Link> to write a review.\r\n                  </Message>\r\n                )}\r\n              </ListGroup.Item>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetailScreen;\r\n","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\productScreen\\ProductEditScreen.js",["141"],"import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport FormContainer from \"../../components/FormContainer\";\r\nimport {\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../../actions/productActions\";\r\nimport {\r\n  PRODUCT_DETAILS_RESET,\r\n  PRODUCT_UPDATE_RESET,\r\n} from \"../../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const productId = match.params.id;\r\n\r\n  // product state variables\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  // get product details\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  // update product\r\n  const productUpdated = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdated;\r\n\r\n  useEffect(() => {\r\n    // if product was successfully updated\r\n    if (successUpdate) {\r\n      // reset product update and details\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch({ type: PRODUCT_DETAILS_RESET });\r\n\r\n      // redirect user back to productlist\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      // if product does not match id in URL\r\n      if (\r\n        typeof product === \"undefined\" ||\r\n        !product.name ||\r\n        product._id !== productId\r\n      ) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        // show the product\r\n        setName(product.name);\r\n        setImage(product.image);\r\n        setDescription(product.description);\r\n        setCategory(product.category);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  // FUNCTIONS\r\n  const uploadImageFileHandler = async (event) => {\r\n    // get the file upload by user\r\n    const imageFile = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", imageFile);\r\n\r\n    // have spinner component appears when uploading file\r\n    setUploading(true);\r\n\r\n    // request to backend\r\n    try {\r\n      const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\n      // get the file path to the image uploaded\r\n      const { data } = await axios.post(\"/cakeshop/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    // update product\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        image,\r\n        description,\r\n        category,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter product name\"\r\n                value={name}\r\n                onChange={(event) => setName(event.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={(event) => setImage(event.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Upload image\"\r\n                custom\r\n                onChange={uploadImageFileHandler}\r\n              ></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter product description\"\r\n                value={description}\r\n                onChange={(event) => setDescription(event.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter product category\"\r\n                value={category}\r\n                onChange={(event) => setCategory(event.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\userScreen\\ProfileScreen.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Message.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Product.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\MetaData.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\actions\\cartActions.js",[],["142","143"],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\nbpha\\Documents\\Cake-Shop-Web-Application\\frontend\\src\\constants\\priceConstants.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":70,"column":6,"nodeType":"150","endLine":70,"endColumn":45,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":27,"column":10,"nodeType":"154","messageId":"155","endLine":27,"endColumn":19},{"ruleId":"144","replacedBy":"156"},{"ruleId":"146","replacedBy":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["160"],"no-unused-vars","'uploading' is assigned a value but never used.","Identifier","unusedVar",["158"],["159"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},"Update the dependencies array to be: [dispatch, match, product._id, successProductReview]",{"range":"163","text":"164"},[2176,2215],"[dispatch, match, product._id, successProductReview]"]